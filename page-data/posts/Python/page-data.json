{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/Python",
    "result": {"pageContext":{"currentCategory":"Python","categories":["All","MySQL","Python","json","자바스크립트","jQuery","HTML","AWS","파이썬","FastAPI","부트페이","블로그","featured"],"edges":[{"node":{"id":"9ada2093-21bd-5032-98b4-b9fb8684e3a3","excerpt":"💡 Intro Postman을 사용하다보면 여러 가지의 Content-Type이 있습니다. form-data, x-www-form-urlencoded, Raw, Binary, GraphQL이 있는데, 오늘은 이 요청 유형에 대해 알아보려 합니다. 🔎 들어가기전 Content-Type이란? 📝 Content-Type : API 연동시에, 보내는 자원의 형식을 명시하기 위해서 HTTP Header에 실리는 정보를 content-type이라고 합니다. 즉, api 요청 시 request에 실어 보내는 data의 type정보를 표현합니다. content-type에 대한 자세한 정보는 NAMP 님의 HTTP Content-Type 정리에 잘 정리되어져 있으니 정보가 필요하신분은 방문해주세요! 📚 POST 요청 유형 📕 1. form-data(양식 데이터) 이름에서 알 수 있듯이 양식 데이터는 양식을 채울때 입력 한 세부 정보와 같이 양식 내부에 래핑하는 데이터를 보내는데 사용됩니다. 이러한…","fields":{"slug":"/Python-GIL/"},"frontmatter":{"categories":"Python","title":"Python GIL, Global interpreter Lock","date":"June 01, 2022"}},"next":{"fields":{"slug":"/Content-Type/"}},"previous":{"fields":{"slug":"/MySQL_err1/"}}},{"node":{"id":"a9f05c0b-c942-5562-abd1-1aa9e737fab3","excerpt":"💡 Intro API를 만들다보면 데이터에 페이징 처리를 해야하는 경우가 종종 있습니다. 그래서 오늘은 MySQL의 Limit과 offset으로 쉽게 페이징 처리를 하는 방법을 포스팅해보고자 합니다.🙌 🔎 MySQL의 offset limit이 처음부터 설정된 개수 까지의 데이터를 보여준다면, offset은 시작점부터 설정된 몇 개 이후의 데이터를 보여줍니다. 이를 이용해 쉽게 페이징 처리를 할 수 있습니다. offset의 기본적인 사용방법은 아래와 같습니다. 다른 유용한 mysql명령어는 아래 링크에서 확인할 수 있습니다!😀 알아두면 쓸모있는 MySQL 명령어 모음 📃 offset으로 페이징 처리하기 먼저 한 페이지당 보여줄 데이터의 개수인 “limit”과 페이지 번호인 “page”를 받습니다. page에 1을 뺀 수에 limit을 곱해서 우리가 사용한 offset을 만들어 줍니다. 🔍첫 페이지는 0부터 시작이기에 page에 1을 빼줍니다. 📝 전체 코드 [참고자료] hhttps:…","fields":{"slug":"/Mysql-offset/"},"frontmatter":{"categories":"MySQL Python","title":"MySQL offset 활용","date":"April 28, 2022"}},"next":{"fields":{"slug":"/mysql-command/"}},"previous":{"fields":{"slug":"/javascript-modal/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
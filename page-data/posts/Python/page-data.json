{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/Python",
    "result": {"pageContext":{"currentCategory":"Python","categories":["All","Interview","Python","AWS","MySQL","RDS","json","자바스크립트","jQuery","HTML","파이썬","FastAPI","부트페이","블로그","featured"],"edges":[{"node":{"id":"535e54c3-edba-5219-9791-d70f88306dca","excerpt":"💡 Intro 백앤드 개발자가 기본적으로 알아야하는 개념을 다시한번 정리할겸 하여 백앤드 개발자를 준비하면서 받았던 면접 질문, 그동안 학습하였던 내용 그리고 예상가능한 질문을 정리해 보았습니다. 기본적인 백앤드 개념, 서버와 시스템에 대한 이해도의 내용을 중점으로하였습니다. 당연하게도 정리되어져 있는 질문들에 대해 딥한 질문들이 들어올 수 있으니 깊이 있게 공부하셔야 합니다. 또한 ‘이 정도 질문들에 스스로 대답할 수 있는 정도의 기본기를 내가 가지고 있구나’를 확인하는 방향으로 공부해도 좋을것 같습니다.😊 🔎 신입 백앤드 개발 면접 질문 HTTP와 HTTPS에 대해 설명해 주세요. HTTP(Hyper Text Transfer Protocol)이란 데이터를 주고 받기 위한 프로토콜이며, 서버/클라이언트 모델을 따릅니다. 또한 HTTP는 평문 데이터를 전송하는 프로토콜이기 때문에, HTTP로 중요한 정보를 주고 받으면 제 3자에 의해 조회될 수 있습니다. 이러한 문제를 해결하기 위…","fields":{"slug":"/Interview/"},"frontmatter":{"categories":"Interview Python AWS","title":"신입 개발자를 위한 면접 질문 정리","date":"July 22, 2022"}},"next":{"fields":{"slug":"/MySQL_err2/"}},"previous":null},{"node":{"id":"66f1ba70-d8b8-51a5-87cb-5ef743b960bf","excerpt":"💡 Intro 오늘은 Python의 가장 큰 특징중 하나인 GIL(Global interpreter Lock)에 대해 알아보려고 합니다. Python을 사용하는 개발자라면 누구나 다 한번쯤은 들어봤을 것이고, 저 또한 GIL에 대해 공부해 본적이 있지만 다시 한번 정리해 보려고 합니다. 🔎 Python 인터프리터란? 우선 GIL이란 Global Interpreter Lock의 약자로 파이썬 인터프리터가 한 쓰레드만이 하나의 바이트코드를 실행 시킬 수 있도록 해주는 Lock입니다. 즉, Python 인터프리터는 한 번에 한 쓰레드만 실행될 수 있다는 것을 의미합니다. 그렇다면 파이썬 인터프리터란 무엇일까요? Python 인터프리터란, Python으로 작성된 코드를 한 줄씩 읽으면서 실행하는 프로그램을 뜻 합니다. Python 인터프리터에 대한 자세한 내용은 파이썬은 인터프리터언어입니까? 블로그에서 조금 더 심도깊게 생각해보실 수 있습니다. 🔎 GIL(Global Interpreter…","fields":{"slug":"/Python-GIL/"},"frontmatter":{"categories":"Python","title":"Python GIL, Global interpreter Lock","date":"June 16, 2022"}},"next":{"fields":{"slug":"/MySQL_err1/"}},"previous":{"fields":{"slug":"/MySQL_err2/"}}},{"node":{"id":"25bc5390-6fe5-51b2-b4ae-44c3c168b01d","excerpt":"💡 Intro API를 만들다보면 데이터에 페이징 처리를 해야하는 경우가 종종 있습니다. 그래서 오늘은 MySQL의 Limit과 offset으로 쉽게 페이징 처리를 하는 방법을 포스팅해보고자 합니다.🙌 🔎 MySQL의 offset limit이 처음부터 설정된 개수 까지의 데이터를 보여준다면, offset은 시작점부터 설정된 몇 개 이후의 데이터를 보여줍니다. 이를 이용해 쉽게 페이징 처리를 할 수 있습니다. offset의 기본적인 사용방법은 아래와 같습니다. 다른 유용한 mysql명령어는 아래 링크에서 확인할 수 있습니다!😀 알아두면 쓸모있는 MySQL 명령어 모음 📃 offset으로 페이징 처리하기 먼저 한 페이지당 보여줄 데이터의 개수인 “limit”과 페이지 번호인 “page”를 받습니다. page에 1을 뺀 수에 limit을 곱해서 우리가 사용한 offset을 만들어 줍니다. 🔍첫 페이지는 0부터 시작이기에 page에 1을 빼줍니다. 📝 전체 코드 [참고자료] hhttps:…","fields":{"slug":"/Mysql-offset/"},"frontmatter":{"categories":"MySQL Python","title":"MySQL offset 활용","date":"April 28, 2022"}},"next":{"fields":{"slug":"/mysql-command/"}},"previous":{"fields":{"slug":"/javascript-modal/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/MySQL",
    "result": {"pageContext":{"currentCategory":"MySQL","categories":["All","MySQL","RDS","Python","json","자바스크립트","jQuery","HTML","AWS","파이썬","FastAPI","부트페이","블로그","featured"],"edges":[{"node":{"id":"5f287001-0e43-51a6-a235-ef745386601e","excerpt":"💡 Intro MySQL에서 DB의 백업파일을 import하려는데 다음과 같은 라는 에러가 발생했습니다. 구글에서 정보를 찾아보니 프로시저의 DEFINER 때문이었는데, RDS가 제공하는 MySQL 서버가 사용자가 아닌 다른 DEFINER가 지정된 sql 파일을 허용하지 않기 때문이라고 합니다. 즉, DEFINER의 계정으로 import하지 않아서 생기는 문제였습니다. 🔎 RDS log_bin_trust_function_creators log_bin_trust_function_creators 옵션은 MySQL이 함수를 수정 및 생성에 대한 제약을 강제할 수 있는 기능입니다.\r\n해당 옵션의 default는 0(OFF)이며, OFF상태의 경우 권한이 있더라도 trigger를 생성할 수 없고, function을 생성할 수 없습니다. SUPER 권한이 있는 사용자만이 함수를 생성 및 변경할 수 있다고 합니다. 또한 log_bin_trust_function_creators 옵션을 1(ON)…","fields":{"slug":"/MySQL_err2/"},"frontmatter":{"categories":"MySQL RDS","title":"ERROR 1227 (42000) at line 18 - Access denied; you need (at least one of) the SUPER privilege(s) for this operation","date":"July 01, 2022"}},"next":{"fields":{"slug":"/Python-GIL/"}},"previous":null},{"node":{"id":"76ea3a91-2dc7-58ba-a549-449a7c5bbe9a","excerpt":"💡 Intro MySQL에서 DB의 백업파일을 import하려는데 다음과 같은 라는 에러가 발생했습니다. 📚 해결방법 구글에서 정보를 찾아보니 프로시저의 DEFINER 때문이었는데, RDS가 제공하는 MySQL 서버가 사용자가 아닌 다른 DEFINER가 지정된 sql 파일을 허용하지 않기 때문이라고 합니다. 즉, DEFINER의 계정으로 import하지 않아서 생기는 문제였습니다. 해결방법은 너무 간단했습니다. 그냥 definer를 삭제하여 import시키면 기본 definer로 자동으로 설정이 된다고 합니다,. 모조리 삭⭐️제⭐️ jjomnoon블로그님의 말대로 찾을 내용에 DEFINER=DEFINER=@, 바꿀내용에 공백을 입력하여 전부 삭제하여 해결했습니다. [참고자료] 💡 Intro 📚 해결방법","fields":{"slug":"/MySQL_err1/"},"frontmatter":{"categories":"MySQL","title":"ERROR 1227 (42000) at line 18 - Access denied; you need (at least one of) the SUPER privilege(s) for this operation","date":"June 04, 2022"}},"next":{"fields":{"slug":"/Content-Type/"}},"previous":{"fields":{"slug":"/Python-GIL/"}}},{"node":{"id":"25bc5390-6fe5-51b2-b4ae-44c3c168b01d","excerpt":"💡 Intro API를 만들다보면 데이터에 페이징 처리를 해야하는 경우가 종종 있습니다. 그래서 오늘은 MySQL의 Limit과 offset으로 쉽게 페이징 처리를 하는 방법을 포스팅해보고자 합니다.🙌 🔎 MySQL의 offset limit이 처음부터 설정된 개수 까지의 데이터를 보여준다면, offset은 시작점부터 설정된 몇 개 이후의 데이터를 보여줍니다. 이를 이용해 쉽게 페이징 처리를 할 수 있습니다. offset의 기본적인 사용방법은 아래와 같습니다. 다른 유용한 mysql명령어는 아래 링크에서 확인할 수 있습니다!😀 알아두면 쓸모있는 MySQL 명령어 모음 📃 offset으로 페이징 처리하기 먼저 한 페이지당 보여줄 데이터의 개수인 “limit”과 페이지 번호인 “page”를 받습니다. page에 1을 뺀 수에 limit을 곱해서 우리가 사용한 offset을 만들어 줍니다. 🔍첫 페이지는 0부터 시작이기에 page에 1을 빼줍니다. 📝 전체 코드 [참고자료] hhttps:…","fields":{"slug":"/Mysql-offset/"},"frontmatter":{"categories":"MySQL Python","title":"MySQL offset 활용","date":"April 28, 2022"}},"next":{"fields":{"slug":"/mysql-command/"}},"previous":{"fields":{"slug":"/javascript-modal/"}}},{"node":{"id":"5cb008ae-8d13-590d-82b0-08d38b67c375","excerpt":"💡 Intro 저는 아직 MySQL초보이기 때문에, 여러 명령어를 사용해 놓고도 시간이 조금 지나면 까먹을 때가 종종 있습니다(어…그 명령어가 뭐드라..?!?!). 그래서 제가 생각하기에 평소에 MySQL을 사용하다가,  알고있으면 쓸모있는 MySQL문법을 이곳에 간단하게 정리해 보려고 합니다.🙌 🔎 알아두면 쓸모있는 MySQL 명령어 모음 페이징을 처리할 수 있는 쿼리인 [OFFSET]에 대해서는 다음 포스팅에 조금 더 자세히 다루어 보도록 하겠습니다.😀 [참고자료] https://zzang9ha.tistory.com/295 https://extbrain.tistory.com/ https://pangtrue.tistory.com/170 💡 Intro 🔎 알아두면 쓸모있는 MySQL 명령어 모음","fields":{"slug":"/mysql-command/"},"frontmatter":{"categories":"MySQL","title":"알아두면 쓸모있는 MySQL 명령어 모음","date":"April 19, 2022"}},"next":{"fields":{"slug":"/jQuery-regex/"}},"previous":{"fields":{"slug":"/Mysql-offset/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
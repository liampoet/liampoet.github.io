{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"221117bb-dc85-547f-ad61-cde1acda659b","excerpt":"💡 Intro 저번에 포스팅한 모달창 위에서 진행됩니다! 오늘은 버튼을 클릭했을 때 클릭되는 효과와 클릭한 데이터가 입력되고 지워지는 기능을 만들어 보려고 합니다. 모달창 생성법은 자바스크립트 예쁜 모달창 만들기포스트를 확인해주세요! 📚 버튼클릭이벤트 만들기 📕 1. CSS로 버튼 이미지 만들기 📝 CSS transition는 CSS 프로퍼티의 값이 변화할 때, 프로퍼티 값의 변화가 일정 시간(duration)에 걸쳐 일어나도록 하게합니다. 저는 버튼이 변화할 때 조금 더 부드러운 모션을 주기위해 로 설정했습니다. button.on : 보통 을 사용하는데, 저는 후에 javascript로 로 이벤트를 주기위해 button.on을 사용했습니다. 🔮 결과(gif) button1.gif 📘 2. HTML작성하기 작성한 css와 javascript로 모달창 코드를 작성합니다. 그리고 모달창을 켜기위한 버튼을 생성합니다. 📝 HTML 전체 메인코드 📒 3. Javascript작성하기 Jav…","frontmatter":{"categories":"자바스크립트 jQuery HTML","title":"jQuery로 버튼 클릭 이벤트 만들기","date":"May 09, 2022"},"fields":{"slug":"/jQuery-btn-event/"}}},{"node":{"id":"d0cbbedb-91ad-5fa1-b3ad-a41b443d694c","excerpt":"💡 Intro 오늘은 웹 페이지에 예쁜 모달창을 만드는 방법을 공부해보려 합니다.🙌(FastAPI 프레임워크 위에서 진행했습니다.) 🔎 팝업창? 모달창? 1) 팝업창 팝업창이란, 현재 열려있는 브라우저 페이지에 또 다른 브라우저 페이지를 띄우는 것을 의미합니다. 창 + 창n의 개념을 가지며, 보통 웹 시작과 동시에 띄우는 형태로 사용합니다. 사용 의도 관점 - 사용자가 현재 의도하는 목적에 상관없이 뜨는 창 2) 모달창 모달창은 기존의 브라우저 페이지위에 새로운 브라우저 페이지를 띄우는 것이 아닌 레이어를 띄우는 것을 의미합니다. 기존의 페이지와 부모-자식 관계를 가지며, 사용자에게 중간중간 보여주는 경우로 많이 사용됩니다. 사용 의도 관점 - 다음 진행 혹은 특정한 행동을 처리하기 위해 필요에 의해 사용되는 창 모달(Modal) vs 논모달(Non-modal) 모달을 공부하면서 논모달을 알게 되었는데, 논모달은 “모달이지만 모달이 아니다”라고 그대로 번역할 수 있습니다. 일반적으…","frontmatter":{"categories":"자바스크립트 jQuery HTML","title":"자바스크립트 예쁜 모달창 만들기","date":"May 04, 2022"},"fields":{"slug":"/javascript-modal/"}}},{"node":{"id":"a9f05c0b-c942-5562-abd1-1aa9e737fab3","excerpt":"💡 Intro API를 만들다보면 데이터에 페이징 처리를 해야하는 경우가 종종 있습니다. 그래서 오늘은 MySQL의 Limit과 offset으로 쉽게 페이징 처리를 하는 방법을 포스팅해보고자 합니다.🙌 🔎 MySQL의 offset limit이 처음부터 설정된 개수 까지의 데이터를 보여준다면, offset은 시작점부터 설정된 몇 개 이후의 데이터를 보여줍니다. 이를 이용해 쉽게 페이징 처리를 할 수 있습니다. offset의 기본적인 사용방법은 아래와 같습니다. 다른 유용한 mysql명령어는 아래 링크에서 확인할 수 있습니다!😀 알아두면 쓸모있는 MySQL 명령어 모음 📃 offset으로 페이징 처리하기 먼저 한 페이지당 보여줄 데이터의 개수인 “limit”과 페이지 번호인 “page”를 받습니다. page에 1을 뺀 수에 limit을 곱해서 우리가 사용한 offset을 만들어 줍니다. 🔍첫 페이지는 0부터 시작이기에 page에 1을 빼줍니다. 📝 전체 코드 [참고자료] hhttps:…","frontmatter":{"categories":"MySQL Python","title":"MySQL offset 활용","date":"April 28, 2022"},"fields":{"slug":"/Mysql-offset/"}}},{"node":{"id":"9377993e-d015-55ab-948a-9291659abbdb","excerpt":"💡 Intro 저는 아직 MySQL초보이기 때문에, 여러 명령어를 사용해 놓고도 시간이 조금 지나면 까먹을 때가 종종 있습니다(어…그 명령어가 뭐드라..?!?!). 그래서 제가 생각하기에 평소에 MySQL을 사용하다가,  알고있으면 쓸모있는 MySQL문법을 이곳에 간단하게 정리해 보려고 합니다.🙌 🔎 알아두면 쓸모있는 MySQL 명령어 모음 페이징을 처리할 수 있는 쿼리인 [OFFSET]에 대해서는 다음 포스팅에 조금 더 자세히 다루어 보도록 하겠습니다.😀 [참고자료] https://zzang9ha.tistory.com/295 https://extbrain.tistory.com/ https://pangtrue.tistory.com/170 💡 Intro 🔎 알아두면 쓸모있는 MySQL 명령어 모음","frontmatter":{"categories":"MySQL","title":"알아두면 쓸모있는 MySQL 명령어 모음","date":"April 19, 2022"},"fields":{"slug":"/mysql-command/"}}},{"node":{"id":"c2a7fa93-cc4c-5190-875f-1e062901c58c","excerpt":"💡 Intro FastAPI로 관리자페이지를 제작 중, 앞부분이 동일한 id로 끝나는 엘리먼트들에 대한 접근이 필요해졌습니다. jQuery에 다양한 정규식이 있다는 것은 알고 있었지만, [id^=]라는 정규식은 이번에 처음 접하게 되었습니다. 사용법도 매우 간단해서 짧게 포스팅 해보려 합니다.🙌 🔎 jQuery정규식이란? 정규표현식 : 특정한 규칙을 가진 문자열의 직합을 표현하는데 사용하는 형식 언어를 정규표현식이라고 합니다. jQuery에도 search(), replace()등 다양한 정규식이 존재하는데, 기초적인 예제는 아래와 같습니다. 정규표현식 예제  var re = /a/         —a 가 있는 문자열 var re = /a/i        —a 가 있는 문자열, 대소문자 구분 안함 var re = /apple/    — apple가 있는 문자열 var re = /[a-z]/    — a~z 사이의 모든 문자 var re = /[a-zA-Z0-9]/    — az, A…","frontmatter":{"categories":"자바스크립트 jQuery","title":"jQuery 정규식 [id^=] 사용해보기","date":"April 10, 2022"},"fields":{"slug":"/jQuery-regex/"}}},{"node":{"id":"6a322e66-8ca4-520f-ba3a-99cdba5a4808","excerpt":"💡 Intro Lambda함수를 이용해 특정시간에 자동으로 카운트를 해야하는 방법이 필요해졌다!🙌 AWS Lambda는 실시간으로 코드를 실행할 수는 있으나, 필요시에만 함수를 실행합니다. Lambda에 있는 함수를 자동으로 동작시킬 수 있는 기술을 찾던 중, 저는 Amazon CloudWatch에 있는 EventBridge를 알게되었습니다. 📚 Amazon EventBridge 규칙 생성하기 📕 1. Amazon EventBridge 규칙 생성하기 AWS 홈페이지에서 Amazon EventBridge에 들어갑니다.  Amazon EventBridge에서 이벤트목록에 규칙을 들어가면 규칙생성이 있는데, 다른 부분은 건들것 없이 그냥 규칙생성만 클릭해주면 됩니다.  📘 2. 규칙 세부 정보 설정하기 📝 1단계 - 규칙 세부 정보 정의 원하는 규칙이름을 정하고, 저번 포스트에 공부하였던 Cron식을 사용할 것이기 때문에, 규칙 유형을 일정으로 하고 다음버튼을 클릭합니다.  📝 2단계 …","frontmatter":{"categories":"AWS 파이썬","title":"AWS CloudWatch(EventBridge)로 특정시간 자동 카운트하기 -2","date":"April 06, 2022"},"fields":{"slug":"/Lambda-CloudWatch2/"}}},{"node":{"id":"5dad196f-3147-5f12-8cb1-82c531cee938","excerpt":"💡 Intro Lambda함수를 이용해 특정시간에 자동으로 카운트를 해야하는 방법이 필요해졌다!🙌 AWS Lambda는 실시간으로 코드를 실행할 수는 있으나, 필요시에만 함수를 실행합니다. Lambda에 있는 함수를 자동으로 동작시킬 수 있는 기술을 찾던 중, 저는 Amazon CloudWatch에 있는 EventBridge를 알게되었습니다. 🔎 들어가기전, 알고가기! -1 Lambda Lambda는 서버를 프로비저닝하거나 관리하지 않고도 코드를 실행할 수 있게 해주는 컴퓨팅 서비스입니다. Lambda는 고가용성 컴퓨팅 인프라에서 코드를 실행하고 서버와 운영 체제 유지 관리, 용량 프로비저닝 및 자동 조정, 코드 및 보안 패치 배포, 코드 모니터링 및 로깅 등 모든 컴퓨팅 리소스 관리를 수행할 수 있습니다. 또한 Lambda는 필요시에만 함수를 실행하며, 일일 몇 개의 요청에서 초당 수천 개의 요청까지 자동으로 확장이 가능합니다. 그리고 사용한 컴퓨팅 시간만큼만 비용을 지불하고, …","frontmatter":{"categories":"AWS 파이썬","title":"AWS CloudWatch(EventBridge)로 특정시간 자동 카운트하기 -1","date":"April 04, 2022"},"fields":{"slug":"/Lambda-CloudWatch1/"}}},{"node":{"id":"8f328073-7d55-56dd-9b01-a07fd8751fb2","excerpt":"💡 Intro 원래 flask를 주로 사용하는데 지인분의 추천으로 FastAPI를 알게 되었습니다. FastAPI에서 libuv(node.js 성능의 핵심)를 코어로 사용하는 uvloop가 너무 매력적 이었고, ASGI를 한번 사용해보고싶어서 FastAPI를 한번 사용해볼까..? 라는 마음으로 사용해 보게 되었습니다. FastAPI로 관리자 웹을 만들다가 기존에 연결해 두었던 DB에 한개를 추가로 더 연결해서 MultipleDatabases를 구성해야하는 상황이 발생했습니다. 생각보다 reference가 많이 없었는데, FastAPI의 제작자이신 tiangolo님의 issues에서 이 문제를 찾을 수 있었습니다. Multipledatabases에 대해 다양한분들의 의견이 잘 정리되어있어서 이를 저의 FastAPI에 적용한것을 정리해보려고 합니다.🙌 🔎 그전에! FastAPI란? 공식 문서에는 다음과 같이 설명되어져 있습니다. FastAPI is a modern, fast (high…","frontmatter":{"categories":"파이썬 FastAPI","title":"FastAPI에 2개 이상의 DB연동하기","date":"March 30, 2022"},"fields":{"slug":"/FastAPI-Multipledatabases/"}}},{"node":{"id":"a0f0a984-c811-5777-a190-b0efc223efad","excerpt":"💡 Intro BootPay는 무료로 서비스되는 결제검증API입니다. 초기에 일반 PG사와 별도의 계약없이 개발을 먼저 할 수 있어서, 앱결제가 급하게 필요했던 저는 BootPay를 이용하기로 했습니다. 간단하게 사용방법을 정리해 보도록 하겠습니다.(매우간단해요!)🙌 🔎 Bootpay란? 부트페이는 개발자를 위한 결제연동 서비스로, 구글 애널리틱스와 같이 결제 데이터 분석 서비스를 제공합니다. 또한 웹, 앱 SDK 모두 지원하며 국내외 여러 PG(복수 선택 가능)와 결제수단을 소스코드 한 줄로 사용할 수 있으므로 불필요한 작업을 줄일 수 있습니다. 📚 결제검증 부트페이 측에서는 결제검증에 대해, 이렇게 설명하고 있습니다. 결제 검증을 해야하는 이유 결제 연동은 Client Side에서 동작되기 때문에 결제 금액 및 결제 상태에 대한 변조가 가능하다고 합니다. 그러므로 반드시 처음 요청했던 금액과 결제가 올바르게 이루어졌는지에 대해 서버사이드에서 서버로 영수증 키를 보내 확인하는 과…","frontmatter":{"categories":"AWS 파이썬 부트페이","title":"AWS Lambda에 Bootpay연동하기 - 결제검증","date":"March 15, 2022"},"fields":{"slug":"/Lambda-Bootpay/"}}},{"node":{"id":"77ef690f-5891-515c-b4f4-876d5e401a84","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","frontmatter":{"categories":"블로그 featured","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"},"fields":{"slug":"/gatsby-github-blog/"}}},{"node":{"id":"e8c6d423-4898-55bd-8d7c-a35443eda320","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","frontmatter":{"categories":"블로그 featured","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"리암","bio":{"role":"Back-End개발자","description":["사람에 가치를 두는","능동적으로 일하는","이로운 것을 만드는"],"thumbnail":"profile2-1.png"},"social":{"github":"https://github.com/liampoet","linkedIn":"","email":"dnwjd6452@gmail.com"}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}